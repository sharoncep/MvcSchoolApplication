@model SchoolApplication.Models.UserRegistrationModel
@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
   
}


@using (Html.BeginForm())
{
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">Student Registration</h3>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(true, "Registration Failed", new { @class = "alert alert-danger" })

            <div class="form-group">
                <div>
                    @Html.LabelFor(u => u.UserName, new { @class = "control-label" })
                </div>
                <div class="col-xs-3">
                    @Html.TextBoxFor(u => u.UserName, new { @placeholder = "Username", @class = "form-control" })
                    <p class="help-block">@Html.ValidationMessageFor(u => u.UserName)</p>
                </div>
            </div>

            <div class="form-group">
                <div>
                    @Html.Label("Roll No", new { @class = "control-label" })
                </div>
                <div class="col-xs-3">
                    @Html.TextBoxFor(u => u.RollNo, new { @placeholder = "Roll No", @class = "form-control" })
                    <p class="help-block">@Html.ValidationMessageFor(u => u.RollNo)</p>
                </div>
            </div>

            <div class="form-group">
                <div>
                    @Html.Label("Name", new { @class = "control-label" })
                </div>
                <div class="col-xs-3">
                    @Html.TextBoxFor(u => u.Name, new { @placeholder = "Name", @class = "form-control" })
                    <p class="help-block">@Html.ValidationMessageFor(u => u.Name)</p>
                </div>
            </div>

            <div class="form-group">
                <div>
                    @Html.Label("Department", new { @class = "control-label" })
                </div>
                <div class="col-xs-3">
                    @Html.DropDownListFor(u => u.DepartmentId, Model.GetDepartments(), new { @class = "form-control" })
                    <p class="help-block">@Html.ValidationMessageFor(u => u.DepartmentId)</p>
                </div>
            </div>

            <div class="form-group">
                <div>
                    @Html.Label("Date of birth", new { @class = "control-label" })
                </div>
                <div class="col-xs-3">
                    @Html.TextBoxFor(u => u.Dob, new { @class = "form-control", @autocomplete = "false" })
                    <p class="help-block">@Html.ValidationMessageFor(u => u.Dob)</p>
                </div>
            </div>

            <div class="form-group">
                <div>
                    @Html.Label("Email", new { @class = "control-label" })
                </div>
                <div class="col-xs-3">
                    @Html.TextBoxFor(u => u.Email, new { placeholder = "Email", @class = "form-control" })
                    <p class="help-block">@Html.ValidationMessageFor(u => u.Email)</p>
                </div>
            </div>
            <div class="form-group">
                <div class="col-xs-offset-3 col-xs-9">
                    <input type="submit" value="Register" data-loading-text="Loading..." class="btn btn-primary" />
                </div>
            </div>

            <div class="form-group">
                @if (ViewBag.SuccessMessage != null)
                {
                    <div class="alert alert-success col-sm-12">@ViewBag.SuccessMessage</div>
                }
            </div>

        </div>
    </div>
    
        
}
<script>
    jQuery('#Dob').datetimepicker({
        timepicker: false,
        mask: true, // '9999/19/39 29:59' - digit is the maximum possible for a cell
        closeOnDateSelect: true,
        format: 'm/d/Y'
    });
</script>

